{
          "event_info": {
                    "event_id": "13085121522",
                    "event_type": "PushEvent"
          },
          "repo": {
                    "repo_url": "https://api.github.com/repos/gustfrontar/radar_profile_v2",
                    "stars": 0,
                    "language": "Python",
                    "forks": 0,
                    "license": null
          },
          "bf_info": {
                    "buggy_file_content": null,
                    "fix_file_info": {
                              "file_path": "run/src/radar_profile_module.py",
                              "url": "https://api.github.com/repos/gustfrontar/radar_profile_v2/contents/run/src/radar_profile_module.py?ref=5654fb537f4479bef58bdfc6b8e4d6720689725c",
                              "content": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwojIC0qLSBjb2Rpbmc6IHV0Zi04IC0q\nLQoiIiIKQ3JlYXRlZCBvbiBTdW4gSnVuIDI4IDE5OjMzOjMzIDIwMjAKCkBh\ndXRob3I6IGp1YW4KIiIiCmltcG9ydCBvcwppbXBvcnQgZ2xvYgppbXBvcnQg\nc2NpcHkuaW8gYXMgc2lvCmltcG9ydCBudW1weSBhcyBucApmcm9tIHNyYyBp\nbXBvcnQgcnZkX3JlYWQgYXMgcnIgCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRh\ndGV0aW1lIGFzIGR0CmZyb20gZGF0ZXRpbWUgaW1wb3J0IHRpbWVkZWx0YQpp\nbXBvcnQgZ2MgCiNmcm9tIHRxZG0gaW1wb3J0IHRxZG0KCgpkZWYgZ2V0X3N0\nYXRpb25zKCBkYXRhYmFzZV9maWxlICkgOgoKICAgIGYgPSBvcGVuKCBkYXRh\nYmFzZV9maWxlICwgInIiICkKICAgIHN0YXRpb25fZGljdD1kaWN0KCkKICAg\nIGNvbnQgPSBUcnVlCiAgICB3aGlsZSggY29udCApIDoKICAgICAgIHRtcD1m\nLnJlYWRsaW5lKCkKICAgICAgIGlmIGxlbih0bXApID4gMSA6CiAgICAgICAg\nICBuZXdsaW5lPXRtcC5zcGxpdCgnOycpCiAgICAgICAgICBzdGF0aW9uX2Rp\nY3RbbmV3bGluZVswXV09ZGljdCgpCiAgICAgICAgICBzdGF0aW9uX2RpY3Rb\nbmV3bGluZVswXV1bJ2xvbiddPW5ld2xpbmVbMV0KICAgICAgICAgIHN0YXRp\nb25fZGljdFtuZXdsaW5lWzBdXVsnbGF0J109bmV3bGluZVsyXQogICAgICAg\nICAgc3RhdGlvbl9kaWN0W25ld2xpbmVbMF1dWydhbHQnXT1uZXdsaW5lWzNd\nCiAgICAgICAgICBzdGF0aW9uX2RpY3RbbmV3bGluZVswXV1bJ25hbWUnXT1u\nZXdsaW5lWzRdLnJzdHJpcCgiXG4iKQogICAgICAgZWxzZSA6CiAgICAgICAg\nICBjb250PUZhbHNlCgogICAgcmV0dXJuIHN0YXRpb25fZGljdAoKCmRlZiBn\nZXRfY2FzZXMoIGRhdGFiYXNlX2ZpbGUgKSAgOgogICAgCiAgICBmID0gb3Bl\nbiggZGF0YWJhc2VfZmlsZSAsICJyIiApCiAgICBjYXNlc19kaWN0PWRpY3Qo\nKQogICAgY2FzZXNfZGljdFsnSUQnXT1saXN0KCkKICAgIGNhc2VzX2RpY3Rb\nJ2RhdGUnXT1saXN0KCkKICAgIGNhc2VzX2RpY3RbJ3JhbmsnXT1saXN0KCkK\nICAgIGNhc2VzX2RpY3RbJ3BwNmgnXT1saXN0KCkKICAgIGNvbnQgPSBUcnVl\nCiAgICB3aGlsZSggY29udCApIDoKICAgICAgIHRtcD1mLnJlYWRsaW5lKCkK\nICAgICAgIGlmIGxlbih0bXApID4gMSA6CiAgICAgICAgICBuZXdsaW5lPXRt\ncC5zcGxpdCgnLCcpICAgICAgICAgIAogICAgICAgICAgY2FzZXNfZGljdFsn\nSUQnXS5hcHBlbmQoIG5ld2xpbmVbMF0gKQogICAgICAgICAgY2FzZXNfZGlj\ndFsnZGF0ZSddLmFwcGVuZCggZHQuc3RycHRpbWUoIG5ld2xpbmVbMl0gKyAn\nLycgKyBuZXdsaW5lWzFdICwnJUgvJWQvJW0vJVknICkgKQogICAgICAgICAg\nY2FzZXNfZGljdFsncmFuayddLmFwcGVuZCggbmV3bGluZVszXSApCiAgICAg\nICAgICBjYXNlc19kaWN0WydwcDZoJ10uYXBwZW5kKCBuZXdsaW5lWzRdLnJz\ndHJpcCgiXG4iKSApCiAgICAgICBlbHNlIDoKICAgICAgICAgIGNvbnQ9RmFs\nc2UKCiAgICByZXR1cm4gY2FzZXNfZGljdAoKZGVmIGdldF9maWxlbGlzdCgg\naW5pX2RhdGUgLCBlbmRfZGF0ZSAsIGRhdGFfcGF0aCAsIG5hbWVfZmlsdGVy\nPU5vbmUgLCBzdWZpeD0nLnoucm12ZCcgLCBkYXRhX29yZGVyPSdSVkQnICkg\nIDoKICAgICNJbmlkYXRlIGVzdGEgZW4gZWwgZm9ybWF0byBZWVlZTU1EREhI\nbW0KICAgICNFbmRkYXRlIGVzdGEgZW4gZWwgZm9ybWF0byBZWVlZTU1EREhI\nbW0KCiAgICBpZiBkYXRhX29yZGVyID09ICdSVkQnIDoKCiAgICAgICAjR2Vu\nZXJhbW9zIGxhIGxpc3RhIGRlIGRpYXMgcXVlIGFiYXJjYW4gZWwgcGVyaW9k\nbyBzb2xpY2l0YWRvLgogICAgICAgaW5pX2RhdGVfZHQgPSBkdC5zdHJwdGlt\nZSggaW5pX2RhdGVbMDo4XSAsICclWSVtJWQnICkKICAgICAgIGVuZF9kYXRl\nX2R0ID0gZHQuc3RycHRpbWUoIGVuZF9kYXRlWzA6OF0gLCAnJVklbSVkJyAp\nCgogICAgICAgY19kYXRlID0gaW5pX2RhdGVfZHQKICAgICAgIGRhdGVfZm9s\nZGVyX2xpc3QgPSBsaXN0KCkgCiAgICAgICB3aGlsZSAoIGNfZGF0ZSA8PSBl\nbmRfZGF0ZV9kdCApIDoKCiAgICAgICAgICBkYXRlX2ZvbGRlcl9saXN0LmFw\ncGVuZCggY19kYXRlICkgCiAgICAgICAgICBjX2RhdGUgPSBjX2RhdGUgKyB0\naW1lZGVsdGEoIGRheXM9MSApCiAgICAgICAgICAKICAgICAgICNHZW5lcmFt\nb3MgbGEgbGlzdGEgZGUgZGlhcyBxdWUgYWJhcmNhbiBlbCBwZXJpb2RvIHNv\nbGljaXRhZG8uCiAgICAgICBpbmlfZGF0ZV9kdCA9IGR0LnN0cnB0aW1lKCBp\nbmlfZGF0ZVswOjEwXSAsICclWSVtJWQlSCcgKQogICAgICAgZW5kX2RhdGVf\nZHQgPSBkdC5zdHJwdGltZSggZW5kX2RhdGVbMDoxMF0gLCAnJVklbSVkJUgn\nICkgICAKICAgICAgICAgIAogICAgICAgbXlfZmlsZWxpc3QgPSBsaXN0KCkK\nICAgICAgIGZvciBteV9kYXRlX2ZvbGRlciBpbiBkYXRlX2ZvbGRlcl9saXN0\nIDoKCiAgICAgICAgICBteV9wYXRoID0gZGF0YV9wYXRoICsgJy8nICsgc3Ry\nKCBteV9kYXRlX2ZvbGRlci55ZWFyICkgKyAnLycgKyBkdC5zdHJmdGltZSgg\nbXlfZGF0ZV9mb2xkZXIgLCAnJVklbSVkJyApICsgJy8qLycgCiAgICAgICAg\nICB0bXBfZmlsZWxpc3QgPSBnbG9iLmdsb2IobXlfcGF0aCArICcqJyArIHN1\nZml4ICkKICAgICAgICAgICNGb3Igc29tZSBkYXRlcyB0aGVyZSBpcyBubyAv\ncnZkLyBmb2xkZXIgCiAgICAgICAgICBteV9wYXRoID0gZGF0YV9wYXRoICsg\nJy8nICsgc3RyKCBteV9kYXRlX2ZvbGRlci55ZWFyICkgKyAnLycgKyBkdC5z\ndHJmdGltZSggbXlfZGF0ZV9mb2xkZXIgLCAnJVklbSVkJyApICsgJy8nCiAg\nICAgICAgICB0bXBfZmlsZWxpc3QgPSB0bXBfZmlsZWxpc3QgKyAgZ2xvYi5n\nbG9iKG15X3BhdGggKyAnKicgKyBzdWZpeCApIAoKICAgICAgICAgIHRtcF9m\naWxlbGlzdF9jcCA9IHRtcF9maWxlbGlzdC5jb3B5KCkKCiAgICAgICAgICAj\nQ2hlcXVlYW1vcyBzaSBsb3MgYXJjaGl2b3MgcXVlIGVuY29udHJhbW9zIGVu\nIGVzdGEgY2FycGV0YSBlc3RhbiBkZW50cm8gZGVsIHJhbmdvLiAKICAgICAg\nICAgIGZvciBteV9maWxlIGluIHRtcF9maWxlbGlzdCA6CgogICAgICAgICAg\nICAgIG15X2ZpbGVuYW1lID0gb3MucGF0aC5iYXNlbmFtZSggbXlfZmlsZSAp\nCiAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICBpZiBu\nYW1lX2ZpbHRlciBpcyBub3QgTm9uZSA6CiAgICAgICAgICAgICAgICBpZiBu\nb3QgYW55KG15X2ZpbHRlciBpbiBteV9maWxlbmFtZSBmb3IgbXlfZmlsdGVy\nIGluIG5hbWVfZmlsdGVyICkgOgogICAgICAgICAgICAgICAgICAgIHRtcF9m\naWxlbGlzdF9jcC5yZW1vdmUoIG15X2ZpbGUgKQogICAgICAgICAgICAgICAg\nICAgIGNvbnRpbnVlIAoKICAgICAgICAgICAgICB0bXBfZGF0ZSA9IGR0LnN0\ncnB0aW1lKCBteV9maWxlbmFtZVsxMjoyMF0gKyBteV9maWxlbmFtZVsyMToy\nNV0gLCAnJVklbSVkJUglTScgKQogICAgICAgICAgICAgIGlmIHRtcF9kYXRl\nID4gZW5kX2RhdGVfZHQgb3IgdG1wX2RhdGUgPCBpbmlfZGF0ZV9kdCA6CiAg\nICAgICAgICAgICAgICAgdG1wX2ZpbGVsaXN0X2NwLnJlbW92ZSggbXlfZmls\nZSApCgogICAgICAgICAgbXlfZmlsZWxpc3QgPSBteV9maWxlbGlzdCArIHRt\ncF9maWxlbGlzdF9jcCAKCiAgICAgICBteV9maWxlbGlzdC5zb3J0KCkKCiAg\nICBlbHNlIDoKICAgICAgIGFyaW50KCdEYXRhIG9yZGVyIG5vdCByZWNvZ25p\nemVkIDooICcpCiAgICAgICBteV9maWxlbGlzdD1saXN0KCkKCiAgICByZXR1\ncm4gbXlfZmlsZWxpc3QKCmRlZiBnZXRfcHJvZmlsZXMoIGNvbmYgKSA6ICNm\naWxlbGlzdCAsIGxvbnJhZGFyICwgbGF0cmFkYXIgLCBhbHRyYWRhciAsIGxv\nbnAgLCBsYXRwICwgcmFkaXVzICkgOgogICAjRXN0YSBmdW5jaW9uIGluZ3Jl\nc2EgbGEgbG9uIHkgbGF0IGRlIHVuIHB1bnRvIGVuIGVsIGFyZWEgZGVsIHJh\nZGFyLgogICAjTGEgZnVuY2lvbiB0b21hIHVuIGNpbGluZHJvIGRlIHJhZGlv\nICJyYWRpdXMiIGFscmVkZWRvciBkZWwgcHVudG8gbG9ucCxsYXRwIHkgCiAg\nICNnZW5lcmEgdW4gcGVyZmlsIGRlIHJlZmxlY3RpdmlkYWQgcHJvbWVkaW8g\nKGRlIGxvcyBwdW50b3MgZW4gZWwgaW50ZXJpb3IgZGVsIGNpbGluZHJvKQog\nICAjRWwgcGVyZmlsIHNlIGdlbmVyYSBjb24gdW5hIGNpZXJ0YSByZXNvbHVj\naW9uIGVzcGFjaWFsIChkej01MDAgbSBwb3IgZGVmZWN0bykgeSAKICAgI3Bv\nciBkZWZlY3RvIHBhcmEgdG9kYXMgbGFzIGFsdHVyYXMgZW50cmUgMCB5IDE1\nMDAwIG1ldHJvcy4KICAgI0VsIHBlcmZpbCBzZSBndWFyZGEgZW4gdW4gZGlj\nY2lvbmFyaW8gY3V5YXMgZW50cmFkYXMgaW5jbHV5ZW46CiAgICN6X3RoX3By\nb2ZpbGUgLCBsYSBhbHR1cmEgc29icmUgZWwgdGVycmVubwogICAjbWVhbnJl\nZl90aF9wcm9maWxlICwgbGEgcmVmbGVjdGl2aWRhZCBtZWRpYSBhIGNhZGEg\nYWx0dXJhCiAgICNzdGRyZWZfdGhfcHJvZmlsZSAsIGxhIGRlc3ZpYWNpb24g\nZXN0YW5kYXJkIGRlIGxhIHJlZmxlY3RpdmlkYWQgYSBjYWRhIGFsdHVyYQog\nICAjY2FsY3VsYWRhIHNvYnJlIHRvZG9zIGxvcyBwdW50b3MgcXVlIGZ1ZXJv\nbiB1c2Fkb3MgcGFyYSBvYnRlbmVyIGVsIHZhbG9yIGRlIHJlZmxlY3Rpdmlk\nYWQgYSB1bmEgYWx0dXJhIGRldGVybWluYWRhCiAgICNtYXhyZWZfdGhfcHJv\nZmlsZSAsIGxhIG1heGltYSByZWZsZWN0aXZpZGFkIGRldGVjdGFkYSBhIHVu\nYSBkZXRlcm1pbmFkYSBhbHR1cmEKICAgI21pbnJlZl90aF9wcm9maWxlICwg\nbGEgbWluaW1pYSByZWZsZWN0dmlkYWQgZGV0ZWN0YWRhCiAgICNudW1fdGhf\ncHJvZmlsZSAsIGxhIGNhbnRpZGFkIGRlIHZhbG9yZXMgZGUgcmVmbGVjdGl2\naWRhZCBwcm9tZWRpYWRvcyBwYXJhIGNhZGEgYWx0dXJhLgogICAjZGF0ZSAs\nIHVuIG9iamV0byBmZWNoYSBkZSBweXRob24gaW5kaWNhbmRvIGxhIGhvcmEg\nYSBsYSBxdWUgZnVlIHRvbWFkbyBlbCB2b2x1bWVuLgoKICAgbXlfcHJvZmls\nZSA9IGRpY3QoKQoKICAgbXlfcHJvZmlsZXMgPSBjb25mLmNvcHkKICAgCiAg\nIG5maWxlcyA9IGxlbiggY29uZlsnZmlsZWxpc3QnXSApCgogICBmb3IgaWZp\nbGUsbXlfZmlsZSBpbiBlbnVtZXJhdGUoIGNvbmZbJ2ZpbGVsaXN0J10gKSA6\nCiAgICAgICNwcmludCgnUmVhZGluZyAnLG15X2ZpbGUpCgogICAgICAjRXN0\nYSBmdW5jaW9uIGRldnVlbHZlIHRvZG9zIGxvcyBwdW50b3MgcXVlIGVzdGFu\nIGRlbnRybyBkZWwgY2lsaW5kcm8gKHJlZixhbHQsZWxldikKICAgICAgI1Rh\nbWJpZW4gZGV2dWVsdmUgZWwgcGVyZmlsIGRlIHZlY2lub3MgbWFzIGNlcmNh\nbm9zIG5uX3JlZiAsIG5uX2FsdCB5IG5uX2VsZXYKICAgICAgW3JlZiAsIGFs\ndCAsIGVsZXYgLCBkYXRlICwgbm5fcmVmICwgbm5fYWx0ICwgbm5fZWxldiBd\nID0gZXh0cmFjdF9wcm9maWxlX2RhdGEoIG15X2ZpbGUgLCBjb25mICkgI3Jh\nZGl1cyAsIGxvbnAgLCBsYXRwICwgbG9ucmFkYXIgLCBsYXRyYWRhciAsIGFs\ndHJhZGFyICkgCgogICAgICBbenAgLCBtZWFucCAsIHN0ZHAgLCBtaW5wICwg\nbWF4cCAsIG51bXAsIGV0b3AgLCB2aWwgLCB2aWxkXSA9IGdyaWRfcHJvZmls\nZSggcmVmICwgYWx0ICwgY29uZiApCiAgIAogICAgICBpZiBpZmlsZSA9PSAw\nIDoKICAgICAgICAgbnogPSBucC5zaXplKCB6cCApIAogICAgICAgICBteV9w\ncm9maWxlWyd6X3RoX3Byb2ZpbGUnXSAgICAgICA9IG5wLnplcm9zKCAobnog\nLCBuZmlsZXMpICkKICAgICAgICAgbXlfcHJvZmlsZVsnbWVhbnJlZl90aF9w\ncm9maWxlJ10gPSBucC56ZXJvcyggKG56ICwgbmZpbGVzKSApCiAgICAgICAg\nIG15X3Byb2ZpbGVbJ3N0ZHJlZl90aF9wcm9maWxlJ10gID0gbnAuemVyb3Mo\nIChueiAsIG5maWxlcykgKQogICAgICAgICBteV9wcm9maWxlWydtYXhyZWZf\ndGhfcHJvZmlsZSddICA9IG5wLnplcm9zKCAobnogLCBuZmlsZXMpICkgIAog\nICAgICAgICBteV9wcm9maWxlWydtaW5yZWZfdGhfcHJvZmlsZSddICA9IG5w\nLnplcm9zKCAobnogLCBuZmlsZXMpICkKICAgICAgICAgbXlfcHJvZmlsZVsn\nbnVtX3RoX3Byb2ZpbGUnXSAgICAgPSBucC56ZXJvcyggKG56ICwgbmZpbGVz\nKSApCiAgICAgICAgIG15X3Byb2ZpbGVbJ3pfcmF3X3Byb2ZpbGUnXSAgICAg\nID0gbGlzdCgpCiAgICAgICAgIG15X3Byb2ZpbGVbJ2FsdF9yYXdfcHJvZmls\nZSddICAgID0gbGlzdCgpCiAgICAgICAgIG15X3Byb2ZpbGVbJ2VsZXZfcmF3\nX3Byb2ZpbGUnXSAgID0gbGlzdCgpCiAgICAgICAgIG15X3Byb2ZpbGVbJ3pf\nbm5fcHJvZmlsZSddICAgICAgID0gbGlzdCgpCiAgICAgICAgIG15X3Byb2Zp\nbGVbJ3JlZl9ubl9wcm9maWxlJ10gICAgID0gbGlzdCgpCiAgICAgICAgIG15\nX3Byb2ZpbGVbJ2VsZXZfbm5fcHJvZmlsZSddICAgID0gbGlzdCgpCiAgICAg\nICAgIG15X3Byb2ZpbGVbJ2RhdGUnXSAgICAgICAgICAgICAgID0gbGlzdCgp\nCiAgICAgICAgIG15X3Byb2ZpbGVbJ2V0b3AnXSAgICAgICAgICAgICAgID0g\nbnAuemVyb3MoIG5maWxlcyApCiAgICAgICAgIG15X3Byb2ZpbGVbJ3ZpbCdd\nICAgICAgICAgICAgICAgID0gbnAuemVyb3MoIG5maWxlcyApCiAgICAgICAg\nIG15X3Byb2ZpbGVbJ3ZpbGQnXSAgICAgICAgICAgICAgID0gbnAuemVyb3Mo\nIG5maWxlcyApCgoKICAgICAgbXlfcHJvZmlsZVsnel90aF9wcm9maWxlJ11b\nOixpZmlsZV0gICAgICAgPSB6cAogICAgICBteV9wcm9maWxlWydtZWFucmVm\nX3RoX3Byb2ZpbGUnXVs6LGlmaWxlXSA9IG1lYW5wCiAgICAgIG15X3Byb2Zp\nbGVbJ3N0ZHJlZl90aF9wcm9maWxlJ11bOixpZmlsZV0gID0gc3RkcAogICAg\nICBteV9wcm9maWxlWydtYXhyZWZfdGhfcHJvZmlsZSddWzosaWZpbGVdICA9\nIG1heHAgIAogICAgICBteV9wcm9maWxlWydtaW5yZWZfdGhfcHJvZmlsZSdd\nWzosaWZpbGVdICA9IG1pbnAKICAgICAgbXlfcHJvZmlsZVsnbnVtX3RoX3By\nb2ZpbGUnXVs6LGlmaWxlXSAgICAgPSBudW1wCiAgICAgIG15X3Byb2ZpbGVb\nJ2RhdGUnXS5hcHBlbmQoIGRhdGUgKQogICAgICBteV9wcm9maWxlWyd6X3Jh\nd19wcm9maWxlJ10uYXBwZW5kKCByZWYgKQogICAgICBteV9wcm9maWxlWydh\nbHRfcmF3X3Byb2ZpbGUnXS5hcHBlbmQoIGFsdCApCiAgICAgIG15X3Byb2Zp\nbGVbJ2VsZXZfcmF3X3Byb2ZpbGUnXS5hcHBlbmQoIGVsZXYgKQogICAgICBt\neV9wcm9maWxlWyd6X25uX3Byb2ZpbGUnXS5hcHBlbmQoIG5uX2FsdCApCiAg\nICAgIG15X3Byb2ZpbGVbJ3JlZl9ubl9wcm9maWxlJ10uYXBwZW5kKCBubl9y\nZWYgKQogICAgICBteV9wcm9maWxlWydlbGV2X25uX3Byb2ZpbGUnXS5hcHBl\nbmQoIG5uX2VsZXYgKQogICAgICBteV9wcm9maWxlWydldG9wJ11baWZpbGVd\nID0gZXRvcAogICAgICBteV9wcm9maWxlWyd2aWwnXVtpZmlsZV0gID0gdmls\nCiAgICAgIG15X3Byb2ZpbGVbJ3ZpbGQnXVtpZmlsZV0gPSB2aWxkCgogICBy\nZXR1cm4gbXlfcHJvZmlsZQoKCmRlZiBncmlkX3Byb2ZpbGUoIHJlZiAsIHog\nLCBjb25mICkgOiAjel9taW49MC4wICwgel9tYXg9MTUwMDAuMCAsIGRlbHRh\nX3ogPSA1MDAuMCAsIHVuZGVmID0gLTMyLjAgKSA6CgoKICAgel9taW4gPSBj\nb25mWyd6X21pbiddCiAgIHpfbWF4ID0gY29uZlsnel9tYXgnXQogICBkZWx0\nYV96ID0gY29uZlsnZGVsdGFfeiddCiAgIHVuZGVmID0gY29uZlsndW5kZWYn\nXQogICBtaW5fcmVmID0gY29uZlsnbWluX3JlZl9wcm9maWxlJ10KICAgbWlu\nX3JlZl9ldG9wID0gY29uZlsnbWluX3JlZl9ldG9wJ10KICAgCgogICB6cCA9\nIG5wLmFyYW5nZSggel9taW4gKyBkZWx0YV96IC8gMi4wICwgel9tYXggKyBk\nZWx0YV96IC8gMi4wICwgZGVsdGFfeiApCiAgIHpwX21pbiA9IG5wLmFyYW5n\nZSggel9taW4gLCB6X21heCAsIGRlbHRhX3ogKQogICB6cF9tYXggPSB6cF9t\naW4gKyBkZWx0YV96CiAgIG5iaW4gPSBucC5zaXplKCB6cF9taW4gKSAKCiAg\nIG1lYW5wPW5wLnplcm9zKG5iaW4pICsgbnAubmFuCiAgIHN0ZHAgPSBucC5j\nb3B5KG1lYW5wKQogICBtaW5wID0gbnAuY29weShtZWFucCkKICAgbWF4cCA9\nIG5wLmNvcHkobWVhbnApCiAgIG51bXAgPSBucC56ZXJvcyhuYmluKSAgIAoK\nICAgI3JlZltyZWY9PXVuZGVmXSA9IG5wLm5hbgoKICAgZm9yIGlpIGluIHJh\nbmdlKCBuYmluICkgOgogICAgICAgbXlfbWFzayA9ICggeiA8PSB6cF9tYXhb\naWldICkgJiAoIHogPj0genBfbWluW2lpXSApICYgKCB+IG5wLmlzbmFuKCBy\nZWYgKSApICAmICggcmVmID4gbWluX3JlZiApICYgKCByZWYgIT0gdW5kZWYg\nKQogICAgICAgdG1wX251bSA9IG5wLnN1bSggbXlfbWFzayApCiAgICAgICBp\nZiAgdG1wX251bSA+IDAgOgogICAgICAgICAgbWVhbnBbaWldID0gbnAubWVh\nbiggcmVmW215X21hc2tdICkKICAgICAgICAgIHN0ZHBbaWldICA9IG5wLnN0\nZCAoIHJlZltteV9tYXNrXSApCiAgICAgICAgICBtaW5wW2lpXSAgPSBucC5t\naW4gKCByZWZbbXlfbWFza10gKQogICAgICAgICAgbWF4cFtpaV0gID0gbnAu\nbWF4ICggcmVmW215X21hc2tdICkKICAgICAgICAgIG51bXBbaWldICA9IHRt\ncF9udW0KCiAgICNEZXRlY3QgdGhlIGhpZ2hlc3QgZWNobyB0b3AKICAgZXRv\ncCA9IG5wLm5hbiAgI0VjaG8gdG9wCiAgIHZpbCAgPSBucC5uYW4gICNWZXJ0\naWNhbGx5IGludGVncmF0ZWQgbGlxdWlkCiAgIHZpbGQgPSBucC5uYW4gICNW\nSUwgZGVuc2l0eQogICBmb3IgaWkgaW4gcmFuZ2UoIG5iaW4gLTEgKSAgOgog\nICAgICAgaWYgKCBtZWFucFtpaSsxXSA8IG1pbl9yZWZfZXRvcCApICYgKCBt\nZWFucFtpaV0gPj0gbWluX3JlZl9ldG9wICkgOgogICAgICAgICAgZXRvcCA9\nIHpwW2lpXSAKCiAgICAgICBpZiB+IG5wLmlzbmFuKCBtZWFucFtpaSsxXSAp\nICYgfiBucC5pc25hbiggbWVhbnBbaWldICkgOgogICAgICAgICAgdG1wX3pf\nbWVhbiA9IDAuNSAqIChtZWFucFtpaSsxXSArIG1lYW5wW2lpXSkKICAgICAg\nICAgIGlmIHRtcF96X21lYW4gPiA1Ni4wIDoKICAgICAgICAgICAgIHRtcF96\nX21lYW4gPSA1Ni4wCiAgICAgICAgICB2aWxfaW5jID0gMy40NGUtNiAqICgg\nKCB0bXBfel9tZWFuICkqKig0LjAvNy4wKSApICogZGVsdGFfegogICAgICAg\nICAgaWYgbnAuaXNuYW4oIHZpbCApIDoKICAgICAgICAgICAgIHZpbCA9IHZp\nbF9pbmMKICAgICAgICAgIGVsc2UgICAgICAgICAgICAgICA6CiAgICAgICAg\nICAgICB2aWwgPSB2aWwgKyB2aWxfaW5jCiAgIGlmIH4gbnAuaXNuYW4oIGV0\nb3AgKSAmIH4gbnAuaXNuYW4oIHZpbCApIDoKICAgICAgIHZpbGQgPSAxMDAw\nLjAgKiB2aWwgLyBldG9wIAoKICAgCgogICByZXR1cm4genAgLCBtZWFucCAs\nIHN0ZHAgLCBtaW5wICwgbWF4cCAsIG51bXAgLCBldG9wICwgdmlsICwgdmls\nZAoKZGVmIGV4dHJhY3RfcHJvZmlsZV9kYXRhKCBmaWxlbmFtZSAsIGNvbmYg\nKSA6ICNyYWRpdXMgLCBsb25wICwgbGF0cCAsIGxvbnJhZGFyICwgbGF0cmFk\nYXIgLCBhbHRyYWRhciApIDoKICAgIAogICAgcmFkYXIgPSByci5ydmRfcmVh\nZCggZmlsZW5hbWUgLCBjb25mWydsb25yYWRhciddICwgY29uZlsnbGF0cmFk\nYXInXSAsIGNvbmZbJ2FsdHJhZGFyJ10gKQoKICAgICMgQnVzY2Ftb3MgbG9z\nIHB1bnRvcyBxdWUgZXN0YW4gZW4gZWwgY2lsaW5kcm8geSBjYWxjdWxhbW9z\nIGVsIHBlcmZpbCBtZWRpbyBzb2JyZSBlbCBjaWxpbmRyby4KICAgIGRsb24g\nPSAgbnAuY29zKHJhZGFyLmdhdGVfbGF0aXR1ZGVbJ2RhdGEnXSpucC5waS8x\nODAuMCkqKCByYWRhci5nYXRlX2xvbmdpdHVkZVsnZGF0YSddIC0gY29uZlsn\nbG9uJ10gKSAgICAKICAgIGRsYXQgPSAgKCByYWRhci5nYXRlX2xhdGl0dWRl\nWydkYXRhJ10gLSBjb25mWydsYXQnXSApCiAgICBkaXN0YW5jaWEgPSBucC5z\ncXJ0KCAoIGRsb24gKiAxMTEwMDAuMCApKioyICsgKCBkbGF0ICogMTExMDAw\nLjAgKSoqMiApCiAgICBkYXRlID0gcmFkYXIubWV0YWRhdGFbJ3N0YXJ0X2Rh\ndGV0aW1lJ10KCiAgICBtYXNjYXJhID0gZGlzdGFuY2lhIDw9IGNvbmZbJ3Jh\nZGl1cyddIAoKICAgIGVsZXZhdGlvbnM9IG5wLnRpbGUoIHJhZGFyLmVsZXZh\ndGlvblsnZGF0YSddICwgKHJhZGFyLmZpZWxkc1sncmVmbGVjdGl2aXR5J11b\nJ2RhdGEnXS5zaGFwZVsxXSAsMSApKS50cmFuc3Bvc2UoKQoKICAgIHJlZiA9\nIHJhZGFyLmZpZWxkc1sncmVmbGVjdGl2aXR5J11bJ2RhdGEnXVsgbWFzY2Fy\nYSBdCgogICAgZWxldiA9IGVsZXZhdGlvbnNbIG1hc2NhcmEgXQoKICAgIGFs\ndCAgPSByYWRhci5nYXRlX3pbJ2RhdGEnXVsgbWFzY2FyYSBdCgogICAgI0J1\nc2NhbW9zIGxvcyBwdW50b3MgcXVlIHNvbiBlbCB2ZWNpbm8gbWFzIGNlcmNh\nbm8gKG5uKSBkZWwgcHVudG8gc2VsZWNjaW9uYWRvIGVuIGNhZGEgcHBpIHBh\ncmEKICAgICNjb25zdHJ1aXIgZWwgcGVyZmlsIGRlIHZlY2lub3MgbWFzIGNl\ncmNhbm9zLiAKCiAgICBlbGV2YXRpb25zID0gcmFkYXIuZWxldmF0aW9uWydk\nYXRhJ10KICAgIHVuaXF1ZV9lbGV2cyA9IG5wLnVuaXF1ZSggZWxldmF0aW9u\ncyApIAogICAgbmVsZXZzID0gbnAuc2l6ZSggdW5pcXVlX2VsZXZzICkKICAg\nIAogICAgcmVmX25uID0gbnAuemVyb3MoIG5lbGV2cyApCiAgICBhbHRfbm4g\nPSBucC56ZXJvcyggbmVsZXZzICkKCiAgICBmb3IgaWUsbXlfZWxldiBpbiBl\nbnVtZXJhdGUoIHVuaXF1ZV9lbGV2cyApIDoKICAgICAgICBteV9tYXNrID0g\nZWxldmF0aW9ucyA9PSBteV9lbGV2CiAgICAgICAgbXlfcmVmICA9IHJhZGFy\nLmZpZWxkc1sncmVmbGVjdGl2aXR5J11bJ2RhdGEnXVtteV9tYXNrLDpdIAog\nICAgICAgIG15X3ogICAgPSByYWRhci5nYXRlX3pbJ2RhdGEnXVtteV9tYXNr\nLDpdCiAgICAgICAgbXlfZGlzdCA9IGRpc3RhbmNpYVtteV9tYXNrLDpdCiAg\nICAgICAgW21pbnggLCBtaW55XSA9IG5wLndoZXJlKCBteV9kaXN0ID09IG5w\nLm1pbiggbXlfZGlzdCApICkKICAgICAgICByZWZfbm5baWVdID0gbnAuY29w\neSggbXlfcmVmW21pbngsbWlueV0gKQogICAgICAgIGFsdF9ubltpZV0gPSBu\ncC5jb3B5KCBteV96W21pbngsbWlueV0gKSAgICAgICAKCiAgICByZXR1cm4g\ncmVmICwgYWx0ICwgZWxldiAsIGRhdGUgLCByZWZfbm4gLCBhbHRfbm4gLCB1\nbmlxdWVfZWxldnMgCgoKCgo=\n",
                              "encoding": "base64"
                    },
                    "commit_url": "https://api.github.com/repos/gustfrontar/radar_profile_v2/commits/5654fb537f4479bef58bdfc6b8e4d6720689725c",
                    "commit_message": "Minor bug correction",
                    "patch": "@@ -194,6 +194,7 @@ def grid_profile( ref , z , conf ) : #z_min=0.0 , z_max=15000.0 , delta_z = 500.\n    undef = conf['undef']\n    min_ref = conf['min_ref_profile']\n    min_ref_etop = conf['min_ref_etop']\n+   \n \n    zp = np.arange( z_min + delta_z / 2.0 , z_max + delta_z / 2.0 , delta_z )\n    zp_min = np.arange( z_min , z_max , delta_z )\n@@ -211,7 +212,7 @@ def grid_profile( ref , z , conf ) : #z_min=0.0 , z_max=15000.0 , delta_z = 500.\n    for ii in range( nbin ) :\n        my_mask = ( z <= zp_max[ii] ) & ( z >= zp_min[ii] ) & ( ~ np.isnan( ref ) )  & ( ref > min_ref ) & ( ref != undef )\n        tmp_num = np.sum( my_mask )\n-       if  tmp_num > 30 :\n+       if  tmp_num > 0 :\n           meanp[ii] = np.mean( ref[my_mask] )\n           stdp[ii]  = np.std ( ref[my_mask] )\n           minp[ii]  = np.min ( ref[my_mask] )",
                    "fault_type": null,
                    "fault_location": null
          },
          "context_and_location": {
                    "Actions": [
                              {
                                        "DstLineLevelContext": "if  tmp_num > 0 :\n          meanp[ii] = np.mean( ref[my_mask] )\n          stdp[ii]  = np.std ( ref[my_mask] )\n          minp[ii]  = np.min ( ref[my_mask] )\n          maxp[ii]  = np.max ( ref[my_mask] )\n          nump[ii]  = tmp_num\n",
                                        "DstLineLevelContextEndLine": 221,
                                        "Type": "Update",
                                        "DstMethodLevelContext": "def grid_profile( ref , z , conf ) : #z_min=0.0 , z_max=15000.0 , delta_z = 500.0 , undef = -32.0 ) :\n\n\n   z_min = conf['z_min']\n   z_max = conf['z_max']\n   delta_z = conf['delta_z']\n   undef = conf['undef']\n   min_ref = conf['min_ref_profile']\n   min_ref_etop = conf['min_ref_etop']\n   \n\n   zp = np.arange( z_min + delta_z / 2.0 , z_max + delta_z / 2.0 , delta_z )\n   zp_min = np.arange( z_min , z_max , delta_z )\n   zp_max = zp_min + delta_z\n   nbin = np.size( zp_min ) \n\n   meanp=np.zeros(nbin) + np.nan\n   stdp = np.copy(meanp)\n   minp = np.copy(meanp)\n   maxp = np.copy(meanp)\n   nump = np.zeros(nbin)   \n\n   #ref[ref==undef] = np.nan\n\n   for ii in range( nbin ) :\n       my_mask = ( z <= zp_max[ii] ) & ( z >= zp_min[ii] ) & ( ~ np.isnan( ref ) )  & ( ref > min_ref ) & ( ref != undef )\n       tmp_num = np.sum( my_mask )\n       if  tmp_num > 0 :\n          meanp[ii] = np.mean( ref[my_mask] )\n          stdp[ii]  = np.std ( ref[my_mask] )\n          minp[ii]  = np.min ( ref[my_mask] )\n          maxp[ii]  = np.max ( ref[my_mask] )\n          nump[ii]  = tmp_num\n\n   #Detect the highest echo top\n   etop = np.nan  #Echo top\n   vil  = np.nan  #Vertically integrated liquid\n   vild = np.nan  #VIL density\n   for ii in range( nbin -1 )  :\n       if ( meanp[ii+1] < min_ref_etop ) & ( meanp[ii] >= min_ref_etop ) :\n          etop = zp[ii] \n\n       if ~ np.isnan( meanp[ii+1] ) & ~ np.isnan( meanp[ii] ) :\n          tmp_z_mean = 0.5 * (meanp[ii+1] + meanp[ii])\n          if tmp_z_mean > 56.0 :\n             tmp_z_mean = 56.0\n          vil_inc = 3.44e-6 * ( ( tmp_z_mean )**(4.0/7.0) ) * delta_z\n          if np.isnan( vil ) :\n             vil = vil_inc\n          else               :\n             vil = vil + vil_inc\n   if ~ np.isnan( etop ) & ~ np.isnan( vil ) :\n       vild = 1000.0 * vil / etop \n\n   \n\n   return zp , meanp , stdp , minp , maxp , nump , etop , vil , vild\n",
                                        "SrcLineLevelContext": "if  tmp_num > 30 :\n          meanp[ii] = np.mean( ref[my_mask] )\n          stdp[ii]  = np.std ( ref[my_mask] )\n          minp[ii]  = np.min ( ref[my_mask] )\n          maxp[ii]  = np.max ( ref[my_mask] )\n          nump[ii]  = tmp_num\n",
                                        "DstMethodLevelContextStartLine": 188,
                                        "SrcMethodLevelContext": "def grid_profile( ref , z , conf ) : #z_min=0.0 , z_max=15000.0 , delta_z = 500.0 , undef = -32.0 ) :\n\n\n   z_min = conf['z_min']\n   z_max = conf['z_max']\n   delta_z = conf['delta_z']\n   undef = conf['undef']\n   min_ref = conf['min_ref_profile']\n   min_ref_etop = conf['min_ref_etop']\n\n   zp = np.arange( z_min + delta_z / 2.0 , z_max + delta_z / 2.0 , delta_z )\n   zp_min = np.arange( z_min , z_max , delta_z )\n   zp_max = zp_min + delta_z\n   nbin = np.size( zp_min ) \n\n   meanp=np.zeros(nbin) + np.nan\n   stdp = np.copy(meanp)\n   minp = np.copy(meanp)\n   maxp = np.copy(meanp)\n   nump = np.zeros(nbin)   \n\n   #ref[ref==undef] = np.nan\n\n   for ii in range( nbin ) :\n       my_mask = ( z <= zp_max[ii] ) & ( z >= zp_min[ii] ) & ( ~ np.isnan( ref ) )  & ( ref > min_ref ) & ( ref != undef )\n       tmp_num = np.sum( my_mask )\n       if  tmp_num > 30 :\n          meanp[ii] = np.mean( ref[my_mask] )\n          stdp[ii]  = np.std ( ref[my_mask] )\n          minp[ii]  = np.min ( ref[my_mask] )\n          maxp[ii]  = np.max ( ref[my_mask] )\n          nump[ii]  = tmp_num\n\n   #Detect the highest echo top\n   etop = np.nan  #Echo top\n   vil  = np.nan  #Vertically integrated liquid\n   vild = np.nan  #VIL density\n   for ii in range( nbin -1 )  :\n       if ( meanp[ii+1] < min_ref_etop ) & ( meanp[ii] >= min_ref_etop ) :\n          etop = zp[ii] \n\n       if ~ np.isnan( meanp[ii+1] ) & ~ np.isnan( meanp[ii] ) :\n          tmp_z_mean = 0.5 * (meanp[ii+1] + meanp[ii])\n          if tmp_z_mean > 56.0 :\n             tmp_z_mean = 56.0\n          vil_inc = 3.44e-6 * ( ( tmp_z_mean )**(4.0/7.0) ) * delta_z\n          if np.isnan( vil ) :\n             vil = vil_inc\n          else               :\n             vil = vil + vil_inc\n   if ~ np.isnan( etop ) & ~ np.isnan( vil ) :\n       vild = 1000.0 * vil / etop \n\n   \n\n   return zp , meanp , stdp , minp , maxp , nump , etop , vil , vild\n",
                                        "SrcLineLevelContextStartLine": 214,
                                        "SrcLineLevelContextEndLine": 220,
                                        "DstLineLevelContextStartLine": 215,
                                        "SrcMethodLevelContextStartLine": 188,
                                        "SrcMethodLevelContextEndLine": 244,
                                        "DstMethodLevelContextEndLine": 245
                              }
                    ]
          }
}